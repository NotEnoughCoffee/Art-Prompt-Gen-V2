
Changes 4/25/2025:
-Created and updated Selection and Category Records
-Determined formatting for Excel sheet that data will be read from
-Created method to Read Excel file (still needs testing) and create the Categories HashMap

Changes 4/26/2025:
-Add error checking to rarity to ensure it is a # and is between 1-3
-minor edits, cleaned up some existing code
-Setup functions to randomly select a Category from the Map.
-Half setup function to randomly pick a selection from within a Category

Changes 4/27/2025:
-Setup Selection randomizer functionality for using rarity system
-Created FormatText utility class for all text formatting functions.
 -set up error checking and number detection
-updated goals
-Created Challenge Class

Changes 4/28/2025
- updated challenge class for more generalization
- planned out initial interface layout
- added a passFilter which loads from a text file (and intended to overwrite the text file on program close)
- passFilter will be used to auto pass anything the filter has kicked out 20 or more times so that things will show up eventually.
- created and tested csv. after troubleshooting file loads in correctly.
- ran a test on challenge class and default challenge appears to be working
- MAJOR progress. file reading and writing now works, passFilter fully implemented and seems functional
- ***Filtering set up for Modifiers -> though some inefficiencies, string references need to be converted to a field***

Changes 4/29/2025
- minor fixes and implemented roll memory save file with load/save methods.
- added search functions to the rolls class to obtain the category or selection from a string input.
- spent 2 hours chasing an easily fixed bug yay

Change 4/30/2025
- Cleaned up progress list below and laid out next steps
- ran tests on various elements
- created sample background image to layout spacing of application UI elements
- created load image function to load the background file, and refactored UIText to become DisplayUI to handle both text and image elements
- created buttons and began implementing functionality. - need to reconfigure Run Challenge method to include more options
- button now rolls a basic challenge (which is not displayed, but at least logged in save file)
- buttons switched to abstract class, and each button is an inheritor class to more cleanly assign independent functions
- forward and backward buttons are able to appropriately move through the roll memory
- result for rolls and navigation are displayed, albeit broke, but it shows up and updates!

5/1/2025
- cleaning up leftover code and notes from previous day
- repackaged classes to be with related features
- added unit testing structure to main class and cleaned up old test code
- added unit testing for some previously completed key features
- temporary fix for display text for testing purposes until further updates made to the challenges class
- Button text implemented. Bugs with the prompt button
- GUI at a functional stage, merged branch with main and opened new branch to work on challenge methods
- reconfigured challenge methods to work with more conditions for future functions

5/2/2025
- further cleanup and deletion of old code. began reformatting classes for better readability.
- merged KeyInput class into Clickable button for better/easier functionality.
- save button implemented. Roll Challenge area is screen grabbed and saved to SavedChallenges Directory

Today's Problems:
 - continue updating readability of classes
 - recreate background graphic with text
 - create the settings page graphic



TODO Cleaned-up:
General ->
- Consider future plans for project: is the best format for this a computer or phone app?
   - as a phone app this could potentially reach more people
   - as a desktop app, users would likely have more control, or the ability to give users more control is easier to work with
   - Phone app can be a long term extended goal.
- Need to update ReadMe with actual instructions (can wait until customization features are working)
- Figure out how to set up screen splits based on number of results from the challenge.
   - needs to be able to accept multiple rolls and roll types.
   - need to consider if multiple options are chosen from one category
   - consider how this would be displayed on screen before making graphics **
       - testing that text displays on screen is the priority.
- Pass Filter should probably be its own class (very low priority)
- File saving methods should probably update on program close. Having a or multiple saves with every roll might be excessive. One method could probably handle all saves together (mid-priority)

CSV File -> (low priority)
- need to update categories and add more choices, as well as reconfigure 'rarity' choices.
- perhaps set up a secondary file, either as a way to run further tests for edge cases, or implement a way to load in or use a different file. (low priority, requires GUI and other elements to be implemented first)

Rolls Class -> (low priority)
- Special Modifier roll needs to be added here or on challenge class to utilize special mods on certain challenges
- Create a final static string for "Modifiers" and replace the repeated use of that throughout the class.
- Enable All method needs a use, and to be updated with checks for 'user disabled' categories once GUI implemented
- may need to find a way to give categories certain tags to ensure certain methods (like modifiers) work if changed by the user. As it is, I am not happy with how modifiers is directly called out in the code, and could have break points
- Combine overloaded catDisable methods into one if not used via user disable features (later)
- Search CatMap method may need to be reworked? It currently has to look through every category in the map, and through every category's entire List<Selection> until it finds the matching Selection.
   - unsure if there is a better way to search since the only relevant information will be the Selection name; unless we re-work the save file feature to include category name for less taxing search (low priority)

Challenges Class ->
- Potentially finished?

GUI ->
- determine window/application size // Currently set to 800x600
   - look into making multiple sizes for alternate devices
- Text display is temporary, need to reformat how text is displayed once more graphics are created and implemented

- Buttons (*)
   - make the 'Challenge type' at the top a clickable button (or drop menu?)
      - make this scroll through the options, including any user options if the preset is 'enabled'

- DisplayUI (?)
   - needs update when new graphics handling is needed

- Graphics (***)
   - set up scaling (low priority, application can stay one size for now)
      - change the way elements are arranged based on desktop/phone app
   - Create a basic template of a settings page? (low priority)
   - Create basic graphics for displaying challenge results

- Better Graphics (low-low priority)
   - Make background graphics nice
   - add animation effects (how? maybe via animated gifs?)
   - Screen transitions
   - a 'rolling' effect that displays other category items - graphics could just be as simple as a slot machine
   - special effect to signify that it was a rare roll
   - special effect if it was skipped 10 times

-Settings (after GUI Setup)
   - Create a user settings 'page'
   - Make toggleable options to enable/disable categories -> add an extra field along with this that defaults to be enabled.
   - A save file for that so user preferences stay the same after program close
   - Make a custom rolls template (and potentially a save file to save a handful of 'user presets' (low priority) )
      - with checkboxes for enable/disable category after it is rolled
   - A reset button? (to default program settings)
   - A clear RollMemory button (to clear and overwrite the save file) (not for PassFilter though)
   - A ReadMe Link (that displays a scrollable text window within the program)
   - An Error Checker (to look at various elements and print out a log of any flags
      - to find issues with category/selection syntax, output incorrect values for rarity system
      - any other potential detections needed based on user input related issues


"Finished" Elements:
- Selection
- Category // baring minor future update for user disable feature
- RollMemory

---------------------------------------------
            Sample Screen Format:
---------------------------------------------


--------------------------------------------
             {Type} Art Prompt:                  : clickable button as well that changes challenge type
 -------------------------------------------
                     |
     Category        |       "    "              : main screen area split into as many divisions as there are rolls?
                     |                           : could do horizontal splits, or randomized effects
     choice          |                           : I would like a visual effect that looks like it is scrolling through a category
                     |
                     |
 -------------------------------------------
    Save | Back | Roll | Forward | Settings      : tied to key presses as well
 -------------------------------------------

 Screen UI Pixel Location Notes from sample file:

 Border is 25px around edge of screen
 There is a 10px border around each element
 a 2px border depicts the exact edge of each element

 Screen width: 800
 Screen height: 600

 Layer:
 Border as base

 Then element border as a Rect at:
 25x25y to 775x25y
 25x575y to 775x575y
 (unknown if this even needs to be defined)

 Title Bar Button Border:
 35x35y to 765x35y
 35x140y to 765x140y

 Roll Screen Border:
 35x150y to 765x150y
 35x500y to 765x500y

 Roll Screen Category Segment:
 35x150y to 765x150y
 35x260y to 765x260y

 Buttons:
 35x510y to 165x510y
 35x565y to 165x565y

 +150 for x for each button

 Screen Middle:
 400x
 325y

 screen 1/3
 243 + 35 x

 screen 2/3
 486+35